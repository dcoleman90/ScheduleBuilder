@model ScheduleBuilder.ModelViews.TimeCardEditViewModel

@{
    ViewBag.Title = "EditTimecard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["alert"] != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@TempData["alert"]</p>
    </div>
}
<h2>Edit @ViewBag.FullName Timecard</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()




    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.scheduledStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.scheduledStartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.scheduledStartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.scheduledEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.scheduledEndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.scheduledEndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.scheduledLunchBreakStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.scheduledLunchBreakStart == null)
                {
                    <input type="datetime-local" name="scheduledLunchBreakStart" />
                }
                else
                {
                    @Html.EditorFor(model => model.scheduledLunchBreakStart, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.scheduledLunchBreakStart, "", new { @class = "text-danger" })
                }
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.scheduledLunchBreakEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.scheduledLunchBreakEnd == null)
                {
                    <input type="datetime-local" name="scheduledLunchBreakEnd" />
                }
                else
                {
                    @Html.EditorFor(model => model.scheduledLunchBreakEnd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.scheduledLunchBreakEnd, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actualStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.actualStartTime == null)
                {
                    <input type="datetime-local" name="startDate" />
                }
                else
                {
                    @Html.EditorFor(model => model.actualStartTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.actualStartTime, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actualEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.actualEndTime == null)
                {
                    <input type="datetime-local" name="startDate" />
                }
                else
                {
                    @Html.EditorFor(model => model.actualEndTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.actualEndTime, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actualLunchBreakStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.actualLunchBreakStart == null)
                {
                    <input type="datetime-local" name="startDate" />
                }
                else
                {
                    @Html.EditorFor(model => model.actualLunchBreakStart, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.actualLunchBreakStart, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.actualLunchBreakEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.actualLunchBreakEnd == null)
                {
                    <input type="datetime-local" name="startDate" />
                }
                else
                {
                    @Html.EditorFor(model => model.actualLunchBreakEnd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.actualLunchBreakEnd, "", new { @class = "text-danger" })
                }
            </div>
        </div>


        @*Hidden fields*@



        <div style="display: none;">
            <div class="form-group">
                @Html.LabelFor(model => model.shiftId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.shiftId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.shiftId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personFirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personLastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*end hidden fields*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

